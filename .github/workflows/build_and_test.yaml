# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Build and Test

on:
  push:
    paths-ignore: # Skip the workflow if only documentation files are changed
      - '**/*.md'
      - '**/LICENSE'
  pull_request:
    branches: [ main ]
    paths-ignore: # Skip the workflow if only documentation files are changed
      - '**/*.md'
      - '**/LICENSE'
  workflow_dispatch:

jobs:
  Build-and-Test:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      # fail-fast: false

      matrix:
        os: [ubuntu-22.04, macos-13]
        build_type: [Debug]
        compiler: [ {cpp: g++, c: gcc}, {cpp: clang++, c: clang} ]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
        echo "bin-dir=${{ github.workspace }}/bin" >> "$GITHUB_OUTPUT"
        echo "lib-dir=${{ github.workspace }}/lib" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.compiler.cpp }}
        -DCMAKE_C_COMPILER=${{ matrix.compiler.c }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-dir }} --config ${{ matrix.build_type }} --parallel 2

    - name: Install
      run: sudo cmake --install ${{ steps.strings.outputs.build-dir }} --config ${{ matrix.build_type }} # Test if install works

    - name: Run Tests
      run: |
        cd ${{ steps.strings.outputs.build-dir }}
        ctest --build-config ${{ matrix.build_type }} --output-on-failure -E edlib_tests
